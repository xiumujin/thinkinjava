/**
 * Singleton 模式通常有两种实现形式。
 * <p>
 * 第 1 种：懒汉式单例
 * 该模式的特点是类加载时没有生成单例，只有当第一次调用 getlnstance 方法时才去创建这个单例。
 * <p>
 * 第 2 种：饿汉式单例
 * 该模式的特点是类一旦加载就创建一个单例，保证在调用 getInstance 方法之前单例已经存在了。
 * <p>
 * <p>
 * 单例模式的应用场景：
 * <p>
 * 前面分析了单例模式的结构与特点，以下是它通常适用的场景的特点。
 * <p>
 * 在应用场景中，某类只要求生成一个对象的时候，如一个班中的班长、每个人的身份证号等。
 * <p>
 * 当对象需要被共享的场合。由于单例模式只允许创建一个对象，共享该对象可以节省内存，并加快对象访问速度。如 Web 中的配置对象、数据库的连接池等。
 * <p>
 * 当某类需要频繁实例化，而创建的对象又频繁被销毁的时候，如多线程的线程池、网络连接池等。
 * <p>
 * 单例模式的扩展
 * <p>
 * 单例模式可扩展为有限的多例（Multitcm）模式，这种模式可生成有限个实例并保存在 ArmyList 中，客户需要时可随机获取。
 */
package singleton;
